(()=>{"use strict";var e="",t={details:{image:null,imageBlob:null,title:null,summary:null,ingredients:null,directions:null,id:null},favoriteIcon:null,favoriteFunction:null,search:function(){window.location="#!/load";var i=document.querySelectorAll(".inputItem.recipeType.selected").length>=1?document.querySelectorAll(".inputItem.recipeType.selected")[0].attributes.data.value:"",o="";document.querySelectorAll(".inputItem.intolerance.selected").forEach((function(e,t){o+=t<=0?e.textContent:","+e.textContent}));var c=document.querySelectorAll("input")[0].checked?20:300;m.request({method:"GET",url:"https://api.spoonacular.com/recipes/complexSearch",params:{apiKey:"cdf510754c3541e8a42f14b7384540d1",instructionsRequired:!0,fillIngredients:!0,addRecipeInformation:!0,number:1,sort:"random",type:i,intolerances:o,maxReadyTime:c}}).then((function(e){var i=[];e.results[0].extendedIngredients.forEach((function(e,t){i.push(e.original)}));var o=[];e.results[0].analyzedInstructions[0].steps.forEach((function(e,t){o.push(e.step)})),t.details={title:e.results[0].title,summary:e.results[0].summary,ingredients:i,directions:o,id:e.results[0].id},fetch(e.results[0].image).then((function(e){return e.blob()})).then((function(e){t.details.imageBlob=e,t.details.image=URL.createObjectURL(e),n.showAsNotFavorited(),window.location="#!/recipe"}))})).catch((function(t){e=t,console.log(e),window.location="#!/error"}))},getRecipe:function(i){idb.openDB("favorites",1).then((function(e){return e.transaction(["recipes"],"readonly").objectStore("recipes").get(i)})).then((function(e){t.details=e,t.details.image=URL.createObjectURL(t.details.imageBlob),n.showAsFavorited(),window.location="#!/recipe"})).catch((function(t){e=t,console.log(e),window.location="#!/error"}))},saveRecipe:function(i){n.showAsLoading(),idb.openDB("favorites",1).then((function(e){var n=e.transaction(["recipes"],"readwrite"),i=n.objectStore("recipes"),o=t.details;return i.put(o),n.complete})).then((function(){setTimeout((function(){n.showAsFavorited(),m.redraw()}),1e3)})).catch((function(t){e=t,console.log(e),window.location="#!/error"}))},removeRecipe:function(i){n.showAsLoading(),idb.openDB("favorites",1).then((function(e){var n=e.transaction(["recipes"],"readwrite");return n.objectStore("recipes").delete(t.details.id),n.complete})).then((function(e){setTimeout((function(){n.showAsNotFavorited(),m.redraw()}),1e3)})).catch((function(t){e=t,console.log(e),window.location="#!/error"}))}},n={all:[],getAll:function(){idb.openDB("favorites",1).then((function(e){return e.transaction(["recipes"],"readonly").objectStore("recipes").getAll()})).then((function(e){e.length<=0?n.all=[]:n.all=e,o.open(),m.redraw()})).catch((function(e){n.all=[]}))},showAsFavorited:function(){t.favoriteIcon="../assets/favoritedIcon.png",t.favoriteFunction=t.removeRecipe},showAsNotFavorited:function(){t.favoriteIcon="../assets/notFavoritedIcon.png",t.favoriteFunction=t.saveRecipe},showAsLoading:function(){t.favoriteIcon="../assets/loading.gif",t.favoriteFunction=null}},i={intolerances:["Dairy","Egg","Gluten","Grain","Peanut","Seafood"],types:[{text:"Main",value:"main course"},{text:"Side Dish",value:"side dish"},{text:"Appetizer",value:"appetizer"},{text:"Soup",value:"soup"},{text:"Dessert",value:"dessert"},{text:"Snack",value:"snack"}],onIntoleranceClick:function(e){e.target.classList.toggle("selected")},onTypesClick:function(e){document.querySelectorAll(".inputItem.recipeType").forEach((function(e,t){e.classList.remove("selected")})),e.target.classList.add("selected")},onBackBtnClick:function(){URL.revokeObjectURL(t.details.image),window.location="#!/main"}},o={close:function(){document.getElementsByClassName("lightbox")[0].classList.add("slideOut"),document.getElementsByClassName("lightbox")[0].classList.remove("slideIn"),document.getElementsByClassName("lightboxBackground")[0].classList.add("hidden")},open:function(){document.getElementsByClassName("lightbox")[0].classList.remove("slideOut"),document.getElementsByClassName("lightbox")[0].classList.add("slideIn"),document.getElementsByClassName("lightboxBackground")[0].classList.remove("hidden")}};function c(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var a=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.element=t,this.swipes=n,this.initialX=null,this.initialY=null,this.attachEventHandlers()}var t,n;return t=e,(n=[{key:"attachEventHandlers",value:function(){var e=this;this.element.addEventListener("touchstart",(function(t){return e.startTouch(t)})),this.element.addEventListener("touchmove",(function(t){return e.moveTouch(t,e.swipes)}))}},{key:"startTouch",value:function(e){this.initialX=e.touches[0].clientX,this.initialY=e.touches[0].clientY}},{key:"moveTouch",value:function(e,t){if(null!==this.initialX&&null!==this.initialY){var n=e.touches[0].clientX,i=e.touches[0].clientY,o=this.initialX-n,c=this.initialY-i;Math.abs(o)>Math.abs(c)?o>0&&t.left?t.left():t.right&&t.right():c>0&&t.up?t.up():t.down&&t.down(),this.initialX=null,this.initialY=null,e.preventDefault()}}}])&&c(t.prototype,n),e}(),r={oncreate:function(){var e={left:o.close};new a(document.getElementsByClassName("lightbox")[0],e)},view:function(){return m(".header",[m(".lightbox",[m(".lightboxHeader","Saved Recipes"),n.all.map((function(e){return m(".savedRecipe",{onclick:function(){t.getRecipe(e.id)}},[m(".savedRecipeTitle",e.title),m("img.forwardImage",{src:"../assets/forward.png"})])}))]),m(".lightboxBackground.hidden",{onclick:o.close}),m("img.savedNavIcon",{src:"../assets/savedNavIcon.png",onclick:n.getAll}),m(".centerText","Recipe App")])}},s={view:function(){return m(".header",[m("img.backBtn",{alt:"navigate back",src:"../assets/back.png",onclick:i.onBackBtnClick}),m(".centerText","Recipe App")])}},l={view:function(){return m("homeScreen.contentView",[m(r),m(".pageContent",[m(".pageSection",[m(".sectionHeader","Recipe type"),m(".inputList",i.types.map((function(e){return m(".btn.inputItem.recipeType",{onclick:function(e){i.onTypesClick(e)},data:e.value},e.text)})))]),m(".pageSection",[m(".sectionHeader","Intolerances"),m(".inputList",i.intolerances.map((function(e){return m(".btn.inputItem.intolerance",{onclick:function(e){i.onIntoleranceClick(e)}},e)})))]),m(".pageSection.switchSection",[m(".sectionHeader","30 minutes or less"),m("label.switch",[m("input",{type:"checkbox"}),m("div.slider")])]),m(".recipeSearch.btn",{onclick:t.search},"Search for recipe")])])}},u={view:function(){return m("recipeScreen.contentView",[m(s),m(".pageContent",[m(".heroSection",[m("img.heroImage.fadeIn",{src:t.details.image,alt:"image"})]),m(".pageSection.favoriteSection.fadeIn",[m(".favoriteTitle",t.details.title),m("img.favoriteImage",{src:t.favoriteIcon,onclick:t.favoriteFunction})]),m(".pageSection.fadeIn",[m(".listTitle","Ingredients"),m(".ingredientList",t.details.ingredients.map((function(e){return m(".ingredient",e)})))]),m(".pageSection.fadeIn",[m(".listTitle","Cooking directions"),m(".directionList",t.details.directions.map((function(e){return m(".direction",e)})))])])])}},d={oncreate:function(){history.replaceState(null,"home","#!/home")},view:function(){return m("loadingScreen.contentView",[m(".pageContent",[m("img.loadingImage",{src:"../assets/loading.gif"})])])}},p={oncreate:function(){history.replaceState(null,"home","#!/home")},view:function(){return m("errorScreen.contentView",[m(s),m(".pageContent",[m(".errorScreenText",e)])])}};window.onload=function(){"serviceWorker"in navigator&&navigator.serviceWorker.register("service-worker.js"),window.location="#!/home";var e=document.body.children[0];m.route(e,"/home",{"/home":l,"/load":d,"/error":p,"/recipe":u})}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,